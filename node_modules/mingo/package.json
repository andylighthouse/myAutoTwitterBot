{
  "_args": [
    [
      {
        "raw": "mingo@^1.1.2",
        "scope": null,
        "escapedName": "mingo",
        "name": "mingo",
        "rawSpec": "^1.1.2",
        "spec": ">=1.1.2 <2.0.0",
        "type": "range"
      },
      "/Users/Andy/Lighthouse/mybot/node_modules/save"
    ]
  ],
  "_from": "mingo@>=1.1.2 <2.0.0",
  "_id": "mingo@1.1.2",
  "_inCache": true,
  "_location": "/mingo",
  "_nodeVersion": "6.10.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/mingo-1.1.2.tgz_1490844407219_0.9928863057866693"
  },
  "_npmUser": {
    "name": "kofrasa",
    "email": "kofrasa@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mingo@^1.1.2",
    "scope": null,
    "escapedName": "mingo",
    "name": "mingo",
    "rawSpec": "^1.1.2",
    "spec": ">=1.1.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/save"
  ],
  "_resolved": "https://registry.npmjs.org/mingo/-/mingo-1.1.2.tgz",
  "_shasum": "73716b0727a800a6994762e1717ddd19afd8e8b5",
  "_shrinkwrap": null,
  "_spec": "mingo@^1.1.2",
  "_where": "/Users/Andy/Lighthouse/mybot/node_modules/save",
  "author": {
    "name": "Francis Asante",
    "email": "kofrasa@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/kofrasa/mingo/issues"
  },
  "dependencies": {},
  "description": "JavaScript implementation of MongoDB query language",
  "devDependencies": {
    "backbone": ">=1.3.x",
    "dox": "0.4.4",
    "dox-template": "0.1.1",
    "gulp": ">=3.9.x",
    "tape": ">=4.x.x",
    "uglify-js": "2.x.x"
  },
  "directories": {},
  "dist": {
    "shasum": "73716b0727a800a6994762e1717ddd19afd8e8b5",
    "tarball": "https://registry.npmjs.org/mingo/-/mingo-1.1.2.tgz"
  },
  "files": [
    "mingo.js",
    "dist/mingo.min.js",
    "dist/mingo.min.js.gz",
    "dist/mingo.min.map",
    "Makefile",
    "LICENSE",
    "README.md",
    "CONTRIBUTORS.md",
    "CHANGELOG.md",
    "VERSION"
  ],
  "gitHead": "dad5970da3947ffc559e087176a45a239e97fb57",
  "homepage": "https://github.com/kofrasa/mingo#readme",
  "keywords": [
    "util",
    "mongo",
    "nosql",
    "query",
    "aggregate",
    "filter",
    "group",
    "project",
    "search",
    "transform"
  ],
  "license": "MIT",
  "main": "mingo.js",
  "maintainers": [
    {
      "name": "kofrasa",
      "email": "kofrasa@gmail.com"
    }
  ],
  "name": "mingo",
  "optionalDependencies": {},
  "readme": "# Mingo\nJavaScript implementation of MongoDB query language\n\nMingo harnesses the power of MongoDB-style queries and allows direct querying of in-memory\njavascript objects in both client and server-side environments. This library is self-contained and has zero-dependencies\n\n[![version](https://img.shields.io/npm/v/mingo.svg)](https://www.npmjs.org/package/mingo)\n[![build status](https://secure.travis-ci.org/kofrasa/mingo.png)](http://travis-ci.org/kofrasa/mingo)\n\n## Installing\n```$ npm install mingo```\n\nIn browser\n```html\n<script type=\"text/javascript\" src=\"./dist/mingo.min.js\"></script>\n```\n\n## Features\n- Supports Dot Notation for both '_&lt;array&gt;.&lt;index&gt;_' and '_&lt;document&gt;.&lt;field&gt;_' selectors\n- Query and Projection Operators\n    - [Array Operators](https://docs.mongodb.com/manual/reference/operator/query-array/)\n    - [Comparisons Operators](https://docs.mongodb.com/manual/reference/operator/query-comparison/)\n    - [Element Operators](https://docs.mongodb.com/manual/reference/operator/query-element/)\n    - [Evaluation Operators](https://docs.mongodb.com/manual/reference/operator/query-evaluation/)\n    - [Logical Operators](https://docs.mongodb.com/manual/reference/operator/query-logical/)\n- Aggregation Framework Operators\n    - [Pipeline Operators](https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/)\n    - [Group Operators](https://docs.mongodb.com/manual/reference/operator/aggregation-group/)\n    - [Projection Operators](https://docs.mongodb.com/manual/reference/operator/projection/)\n    - [Arithmetic Operators](https://docs.mongodb.com/manual/reference/operator/aggregation-arithmetic/)\n    - [Array Operators](https://docs.mongodb.com/manual/reference/operator/aggregation-array/)\n    - [Boolean Operators](https://docs.mongodb.com/manual/reference/operator/aggregation-boolean/)\n    - [Comparisons Operators](https://docs.mongodb.com/manual/reference/operator/aggregation-comparison/)\n    - [Conditional Operators](https://docs.mongodb.com/manual/reference/operator/aggregation-conditional/)\n    - [Date Operators](https://docs.mongodb.com/manual/reference/operator/aggregation-date/)\n    - [Literal Operators](https://docs.mongodb.com/manual/reference/operator/aggregation-literal/)\n    - [Set Operators](https://docs.mongodb.com/manual/reference/operator/aggregation-set/)\n    - [String Operators](https://docs.mongodb.com/manual/reference/operator/aggregation-string/)\n    - [Variable Operators](https://docs.mongodb.com/manual/reference/operator/aggregation-projection/)\n- Support for adding custom operators\n- Match against user-defined types\n- Support for aggregaion variables\n    - [`$$ROOT`,`$$CURRENT`,`$$DESCEND`,`$$PRUNE`,`$$KEEP`](https://docs.mongodb.com/manual/reference/aggregation-variables/)\n- Support integrating with custom collections via mixin\n- Query filter and projection streaming. See [mingo-stream](https://github.com/kofrasa/mingo-stream)\n\nFor documentation on using query operators see [mongodb](http://docs.mongodb.org/manual/reference/operator/query/)\n\n\n## Usage\n```js\n\nvar Mingo = require('mingo');\n// or just access *Mingo* global in browser\n\n// setup the key field for your collection\nMingo.setup({\n    key: '_id' // default\n});\n\n// create a query with criteria\n// find all grades for homework with score >= 50\nvar query = new Mingo.Query({\n    type: \"homework\",\n    score: { $gte: 50 }\n});\n```\n\n## Searching and Filtering\n```js\n// `collection` is an Array of objects you want to query\n\n// filter collection with find()\nvar cursor = query.find(collection);\n\n// shorthand with query criteria\n// cursor = Mingo.find(collection, criteria);\n\n// sort, skip and limit by chaining\ncursor.sort({student_id: 1, score: -1})\n    .skip(100)\n    .limit(100);\n\n// count matches\ncursor.count();\n\n// iterate cursor\n// iteration is forward only\nwhile (cursor.hasNext()) {\n    console.log(cursor.next());\n}\n\n// use first(), last() and all() to retrieve matched objects\ncursor.first();\ncursor.last();\ncursor.all();\n\n// Filter non-matched objects (\nvar result = query.remove(collection);\n```\n\n## Aggregation Pipeline\n```js\nvar agg = new Mingo.Aggregator([\n    {'$match': { \"type\": \"homework\"}},\n    {'$group':{'_id':'$student_id', 'score':{$min:'$score'}}},\n    {'$sort':{'_id': 1, 'score': 1}}\n]);\n\nvar result = agg.run(collection);\n\n// shorthand\nresult = Mingo.aggregate(\n    collection,\n    [\n        {'$match': { \"type\": \"homework\"}},\n        {'$group':{'_id':'$student_id', 'score':{$min:'$score'}}},\n        {'$sort':{'_id': 1, 'score': 1}}\n    ]\n);\n```\n\n## Integration with custom collection\n```js\n// using Backbone.Collection as an example (any user-defined object will do)\nvar Grades = Backbone.Collection.extend(Mingo.CollectionMixin);\n\n// `collection` is an array of objects\nvar grades = new Grades(collection);\n\n// find students with grades less than 50 in homework or quiz\n// sort by score ascending and type descending\ncursor = grades.query({\n    $or: [{type: \"quiz\", score: {$lt: 50}}, {type: \"homework\", score: {$lt: 50}}]\n}).sort({score: 1, type: -1}).limit(10);\n\n// return grade with the lowest score\ncursor.first();\n```\n\nThe collection to mixin needs to provide a method with signature `toJSON() -> Array[Object]`.\n\n## Documentation\n- [API](https://github.com/kofrasa/mingo/wiki/API)\n- [Custom Operators](https://github.com/kofrasa/mingo/wiki/Custom-Operators)\n\n## Contributing\n- Submit pull requests to the [development](https://github.com/kofrasa/mingo/tree/development) branch\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kofrasa/mingo.git"
  },
  "scripts": {
    "build": "make build",
    "test": "make test"
  },
  "version": "1.1.2"
}
